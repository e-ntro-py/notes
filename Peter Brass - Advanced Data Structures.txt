Search Trees
min_depthsum(n) >= nlogn:
    min_depthsum(1) = 0
                    = 1log1
    min_depthsum(n) = n + min{a + b = n}{min_depthsum(a) + min_depthsum(b)}
                    >= n + min{a + b = n}(aloga + blogb)
                    >= n + min{a + b = n}((a + b)log((a + b)/2))
                    >= n + nlog(n/2)
                    = n + nlogn - n
                    = nlogn
max_depthsum(n) = (n - 1)(n + 2)/2:
    max_depthsum(1) = 0
                    = (1 - 1)(1 + 2)/2
    max_depthsum(n) = n + max{a + b = n}(max_depthsum(a) + max_depthsum(b))
                    = n + max{a + b = n}((a - 1)(a + 2)/2 + (b - 1)(b + 2)/2)
                    = n + max{1, n - 1}(2a^2 - 2na + n^2 + n - 4)/2
                    = n + (n^2 + n - 4)/2 + max{1, n - 1}(a^2 - na)
                    = n + (n^2 + n - 4)/2 + 1 - n
                    = (n^2 + n - 2)/2
                    = (n - 1)(n + 2)/2

